2013 March
The Docker image => Universal app packaging
The Docker registry => Universal app distribution
The Docker container => Identical runtime environments

docker version
docker info

docker run -d -p 8800:80 httpd

docker container run --publish 80:80 --detach nginx
docker container run --publish 80:80 --detach --name webhost nginx
docker container run --publish 80:80 --detach --name db --env MYSQL_RANDOM_ROOT_PASSWORD=yes mysql
docker container stop CONTAINER
docker container start CONTAINER

docker container ls
docker container ls -a

docker container logs CONTAINER

docker container inspect CONTAINER

docker container stats  

docker container run -it
docker container exec -it
dcoker container start -ai CONTAINER	

docker container port CONTAINER

docker ps

docker pull IMAGE

docker network ls
docker network inspect NETWORK
docker network create --driver
docker network connect
docker network disconnect

docker container run --network

docker image ls
docker image pull IMAGE:TAG
docker image history IMAGE
docker image inspect IMAGE
docker image tag
docker image push
docker image build -t TAG .
docker image build -t TAG -f DOCKERFILE
docker image prune
docker image prune -a

docker volume ls
docker volume inspect
docker volume create 
docker volume prune
docker container run -d --name mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=True -v mysql-db:/var/lib/mysql mysql
docker container run -d --name nginx -p 80:80 -v $(pwd):/usr/share/nginx/html nginx

kubectl run
kubectl create
kubectl apply

kubectl version
kubectl run my-nginx --image nginx
kubectl create deployment my-nginx --image nginx
kubectl get pods
kubectl get all
kubectl delete pod my-nginx
kubectl delete deployment my-nginx
kubectl scale deploy/my-nginx --replicas 2
kubectl scale deploy my-nginx --replicas 2

kubectl get deploy/my-apache
kubectl get deploy/my-apache -o wide
kubectl get deploy/my-apache -o yaml
kubectl get all -o wide
kubectl get nodes
kubectl get nodes docker-desktop -o wide
kubectl get pods -w
kubectl get events
kubectl get events --watch-only

kubectl describe node docker-desktop
kubectl describe deploy my-apache
kubectl describe pod/POD_NAME

kubectl logs deploy/my-apache
kubectl logs deploy/my-apache --follow --tail 1
kubectl logs pod/my-apache-55d9785566-d7h58 -c httpd
kubectl logs pod/my-apache-55d9785566-d7h58 --all-containers=true
kubectl logs -l app=my-apache

kubectl expose deployment/httpenv --port 8888
kubectl expose deployment/httpenv --port 8888 --name httpenv-np --type NodePort
kubectl expose deployment/httpenv --port 8888 --name httpenv-lb --type LoadBalancer

kubectl get namespaces

kubectl create deployment test --image nginx --dry-run=client
kubectl create deployment test --image nginx --dry-run=client -o yaml
